程序主要分为三个模块：主函数，map类，agv类；
主函数先初始化，时间窗数组isfull，拥堵系数数组paths，以及小车对象和地图别名的映射关系。再通过agv.cheakfree判断是否为空闲（判定 依据时间窗预估执行任务的agv是否在此时刻为空闲状态）
若为空闲，进入通信线程，获取task.json，读取起始和终点，进入路径计算函数并更新拥堵系数表和时间窗数组。然后通过判定是否冲突并给出改路决策。最后将处理后的路径发送给小车。
主函数：
1.主要是小车的初始化，以及地图别名的生成；小车的初始化，是利用小车id为唯一标识符，初始化agv类，生成一个虚拟的agv对象。
地图别名，由于地图使用的是拓扑图，而拓扑图的顶点是用整型记录的，而现实站点名是使用字符串类型。
需要利用别名对应json文件（文件名和地址已经写死，需要放在程序目录下面），以及wj_函数生成对应关系。
2.通信模块。与小车的通信，以及发送指令给后台，也是在主函数里面实现的。
map类：建立地图，进入算法获得路径，并绑定在agv对象上，更新时间窗数组。
build（）建立地图，更新拥堵系数
dj（）+ 主要算法，计算路径和迭代。
agv类：创建和析构agv，通过时间窗记录判断是否空闲，通过时间窗找出拥堵节点，判断是否改路，无法改路后选择等待还是继续前行。

